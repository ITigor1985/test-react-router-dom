{"version":3,"file":"static/js/973.4f2923e6.chunk.js","mappings":"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","sources":["components/SearchBar/SearchBar.jsx","components/MoviesPage/MoviesPage.styled.jsx","components/MoviesPage/MoviesPage.jsx","services/publicationsApi.js"],"sourcesContent":["import './searchbar.css';\nimport { useState } from 'react';\n\nexport default function SearchBar({ onSubmit }) {\n  const [query, setQuery] = useState('');\n\n  const handleChange = ({ target: { value } }) => {\n    setQuery(value.toLowerCase().trim());\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (query === '') {\n      alert('Enter movie title');\n      return;\n    }\n\n    onSubmit(query);\n  };\n  return (\n    <header className=\"searchbar\">\n      <form className=\"searchForm\" onSubmit={handleSubmit}>\n        <button type=\"submit\" className=\"searchForm-button\"></button>\n\n        <input\n          className=\"searchForm-input\"\n          type=\"text\"\n          autoComplete=\"off\"\n          // autoFocus\n          placeholder=\"Search movie\"\n          onChange={handleChange}\n        />\n      </form>\n    </header>\n  );\n}\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display:flex;\n  flex-wrap:wrap;\n  justify-content:space-between;\n  & > li{\n      \n  }\n`;\n\nexport const ListItem = styled.li`\n  width: 250px;\n  \n`;","import SearchBar from '../SearchBar/SearchBar';\nimport { List, ListItem } from './MoviesPage.styled';\nimport { getSearch } from 'services/publicationsApi.js';\nimport { useState, useEffect } from 'react';\nimport { Link, useSearchParams, useLocation } from 'react-router-dom';\n\n\nexport default function MoviesPage() {\n  \n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const newQuery = searchParams.get('query');\n  const location = useLocation();\n  \n  useEffect(() => {\n    async function getMovies() {\n      \n      try {\n        if (newQuery === null) {\n          return;\n        }\n        \n        const { results, total_results } = await getSearch(newQuery);\n        if (total_results === 0) {\n          alert('Nothing found');\n          return;\n        }\n        \n\n        const films = results.map(({ id, original_title, poster_path }) => {                    \n          return { id, original_title, poster_path };\n        });\n\n        setMovies(films);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    \n    getMovies();\n  }, [newQuery]);\n\n  const handleFormSubmit = query => {\n    return setSearchParams({query});\n  };\n  return (\n    <div>\n      <SearchBar onSubmit={handleFormSubmit} />\n      <List>\n        {movies.map(movie => {\n          return (\n            <ListItem key={movie.id}>\n              <Link\n                style={{ display: 'block', margin: '1rem 0' }}\n                to={`/movies/${movie.id}`}\n                key={movie.id}\n                state={{from: location}}\n              >\n                {(movie.poster_path && (\n                  <img\n                    src={`https://image.tmdb.org/t/p/original${movie.poster_path}`}\n                    alt={`${movie.original_title}`}\n                    width=\"250\"\n                  />\n                )) || (<img\n                src={`https://12knots.ru/storage/app/uploads/public/045/61a/f10/thumb__375_250_0_0_crop.jpg`}\n                alt=\"not-found\"\n                width=\"250\"\n                height=\"375\"\n              />\n            )}\n                {movie.original_title}\n              </Link>\n            </ListItem>\n          );\n        })}\n      </List>\n      \n    </div>\n  );\n}\n","import axios from 'axios';\nconst key = '051044c279aad319532da903b2292510';\n\nexport const getTrending = async () => {\n  axios.defaults.baseURL = `https://api.themoviedb.org/3/trending/movie/day?api_key=${key}`;\n  const response = await axios.get(`${axios.defaults.baseURL}`);\n  return response.data;\n};\nexport const getSearch = async query => {\n  axios.defaults.baseURL = `https://api.themoviedb.org/3/search/movie?api_key=${key}&query=${query}&page=1&language=en-US`;\n  const response = await axios.get(`${axios.defaults.baseURL}`);\n  return response.data;\n};\nexport const getMovieDetails = async movie_id => {\n  axios.defaults.baseURL = `https://api.themoviedb.org/3/movie/${movie_id}?api_key=${key}&language=en-US`;\n  const response = await axios.get(`${axios.defaults.baseURL}`);\n  return response.data;\n};\nexport const getMovieCast = async movie_id => {\n  axios.defaults.baseURL = `https://api.themoviedb.org/3/movie/${movie_id}/credits?api_key=${key}&language=en-US`;\n  const response = await axios.get(`${axios.defaults.baseURL}`);\n  return response.data;\n};\nexport const getMovieReviews = async movie_id => {\n  axios.defaults.baseURL = `https://api.themoviedb.org/3/movie/${movie_id}/reviews?api_key=${key}&language=en-US`;\n  const response = await axios.get(`${axios.defaults.baseURL}`);\n  return response.data;\n};\n"],"names":["SearchBar","onSubmit","useState","query","setQuery","className","event","preventDefault","alert","type","autoComplete","placeholder","onChange","value","target","toLowerCase","trim","List","styled","ListItem","MoviesPage","movies","setMovies","useSearchParams","searchParams","setSearchParams","newQuery","get","location","useLocation","useEffect","getSearch","results","total_results","films","map","id","original_title","poster_path","console","log","getMovies","movie","style","display","margin","to","state","from","src","alt","width","height","key","getTrending","axios","response","data","getMovieDetails","movie_id","getMovieCast","getMovieReviews"],"sourceRoot":""}