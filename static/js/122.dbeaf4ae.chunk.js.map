{"version":3,"file":"static/js/122.dbeaf4ae.chunk.js","mappings":"qQAIe,SAASA,IACtB,IAAMC,GAAYC,EAAAA,EAAAA,MAAZD,QACN,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KA0BA,OAxBAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,oGAE2B,IAAnBF,EAAQG,OAFhB,kEAK6CC,EAAAA,EAAAA,IAAgBP,GAL7D,mBAKYQ,EALZ,EAKYA,QAEc,IAP1B,EAKqBC,cALrB,mDAWUC,EAASF,EAAQG,KAAI,YACzB,MAAO,CAAEC,GAD6C,EAA1BA,GACfC,OADyC,EAAtBA,OACXC,QADiC,EAAdA,YAI1CV,EAAWM,GAff,kDAiBIK,QAAQC,IAAR,MAjBJ,2DADc,uBAAC,WAAD,wBAqBdC,KACC,CAACjB,EAASG,KAGX,iCACE,wBACGA,GACCA,EAAQQ,KAAI,SAAAD,GACV,OACE,2BACE,kCAAUA,EAAOG,WACjB,uCAAeH,EAAOI,aAFfJ,EAAOE,SAOvBT,GAA8B,IAAnBA,EAAQG,SAClB,iE,0MC7CFY,EAAM,mCAECC,EAAW,mCAAG,2FACzBC,IAAAA,SAAAA,QAAA,kEAAoFF,GAD3D,SAEFE,IAAAA,IAAA,UAAaA,IAAAA,SAAAA,UAFX,cAEnBC,EAFmB,yBAGlBA,EAASC,MAHS,2CAAH,qDAKXC,EAAS,mCAAG,WAAMC,GAAN,8EACvBJ,IAAAA,SAAAA,QAAA,4DAA8EF,EAA9E,kBAA2FM,EAA3F,0BADuB,SAEAJ,IAAAA,IAAA,UAAaA,IAAAA,SAAAA,UAFb,cAEjBC,EAFiB,yBAGhBA,EAASC,MAHO,2CAAH,sDAKTG,EAAe,mCAAG,WAAMC,GAAN,8EAC7BN,IAAAA,SAAAA,QAAA,6CAA+DM,EAA/D,oBAAmFR,EAAnF,mBAD6B,SAENE,IAAAA,IAAA,UAAaA,IAAAA,SAAAA,UAFP,cAEvBC,EAFuB,yBAGtBA,EAASC,MAHa,2CAAH,sDAKfK,EAAY,mCAAG,WAAMD,GAAN,8EAC1BN,IAAAA,SAAAA,QAAA,6CAA+DM,EAA/D,4BAA2FR,EAA3F,mBAD0B,SAEHE,IAAAA,IAAA,UAAaA,IAAAA,SAAAA,UAFV,cAEpBC,EAFoB,yBAGnBA,EAASC,MAHU,2CAAH,sDAKZf,EAAe,mCAAG,WAAMmB,GAAN,8EAC7BN,IAAAA,SAAAA,QAAA,6CAA+DM,EAA/D,4BAA2FR,EAA3F,mBAD6B,SAENE,IAAAA,IAAA,UAAaA,IAAAA,SAAAA,UAFP,cAEvBC,EAFuB,yBAGtBA,EAASC,MAHa,2CAAH","sources":["components/Reviews/Reviews.jsx","services/publicationsApi.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from '../../services/publicationsApi';\n\nexport default function Reviews() {\n  let { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    async function getReviews() {\n      try {\n        if (reviews.length !== 0) {\n          return;\n        }\n        const { results, total_results } = await getMovieReviews(movieId);\n\n        if (total_results === 0) {\n          return;\n        }\n\n        const review = results.map(({ id, author, content }) => {\n          return { id, author, content };\n        });\n\n        setReviews(review);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    getReviews();\n  }, [movieId, reviews]);\n\n  return (\n    <>\n      <ul>\n        {reviews &&\n          reviews.map(review => {\n            return (\n              <li key={review.id}>\n                <p>Name: {review.author}</p>\n                <p>Character: {review.content}</p>\n              </li>\n            );\n          })}\n      </ul>\n      {reviews && reviews.length === 0 && (\n        <p>Sorry, no reviews for this movie</p>\n      )}\n    </>\n  );\n}\n","import axios from 'axios';\nconst key = '051044c279aad319532da903b2292510';\n\nexport const getTrending = async () => {\n  axios.defaults.baseURL = `https://api.themoviedb.org/3/trending/movie/day?api_key=${key}`;\n  const response = await axios.get(`${axios.defaults.baseURL}`);\n  return response.data;\n};\nexport const getSearch = async query => {\n  axios.defaults.baseURL = `https://api.themoviedb.org/3/search/movie?api_key=${key}&query=${query}&page=1&language=en-US`;\n  const response = await axios.get(`${axios.defaults.baseURL}`);\n  return response.data;\n};\nexport const getMovieDetails = async movie_id => {\n  axios.defaults.baseURL = `https://api.themoviedb.org/3/movie/${movie_id}?api_key=${key}&language=en-US`;\n  const response = await axios.get(`${axios.defaults.baseURL}`);\n  return response.data;\n};\nexport const getMovieCast = async movie_id => {\n  axios.defaults.baseURL = `https://api.themoviedb.org/3/movie/${movie_id}/credits?api_key=${key}&language=en-US`;\n  const response = await axios.get(`${axios.defaults.baseURL}`);\n  return response.data;\n};\nexport const getMovieReviews = async movie_id => {\n  axios.defaults.baseURL = `https://api.themoviedb.org/3/movie/${movie_id}/reviews?api_key=${key}&language=en-US`;\n  const response = await axios.get(`${axios.defaults.baseURL}`);\n  return response.data;\n};\n"],"names":["Reviews","movieId","useParams","useState","reviews","setReviews","useEffect","length","getMovieReviews","results","total_results","review","map","id","author","content","console","log","getReviews","key","getTrending","axios","response","data","getSearch","query","getMovieDetails","movie_id","getMovieCast"],"sourceRoot":""}