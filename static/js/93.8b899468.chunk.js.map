{"version":3,"file":"static/js/93.8b899468.chunk.js","mappings":"kQAEaA,E,QAAWC,GAAAA,GAAH,+J,SCGN,SAASC,IACtB,IAAMC,GAAYC,EAAAA,EAAAA,MAAZD,QACN,GAA0BE,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAwBA,OAtBAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,oGAEyB,IAAjBF,EAAMG,OAFd,kEAK2BC,EAAAA,EAAAA,IAAaP,GALxC,mBAMwB,KADZQ,EALZ,EAKYA,MACCF,OANb,wBAOMG,MAAM,yBAPZ,2BAUUC,EAASF,EAAKG,KAAI,YACtB,MAAO,CAAEC,GADwD,EAAxCA,GACZC,aADoD,EAApCA,aACFC,KADsC,EAAtBA,KACVC,UADgC,EAAhBA,cAInDX,EAASM,GAdb,kDAgBIM,QAAQC,IAAR,MAhBJ,2DADc,uBAAC,WAAD,wBAoBdC,KACC,CAAClB,EAASG,KAEX,SAACN,EAAD,UACGM,GACCA,EAAMQ,KAAI,SAAAH,GACR,OACE,0BACIA,EAAKK,eACL,gBACEM,IAAG,6CAAwCX,EAAKK,cAChDO,IAAG,UAAKZ,EAAKM,MACbO,MAAM,UAGR,gBACEF,IAAG,4FACHC,IAAG,UAAKZ,EAAKM,MACbO,MAAM,MACNC,OAAO,SAIX,kCAAUd,EAAKM,SACf,uCAAeN,EAAKO,eAjBbP,EAAKI,W,0MCnCpBW,EAAM,mCAECC,EAAW,mCAAG,2FACzBC,IAAAA,SAAAA,QAAA,kEAAoFF,GAD3D,SAEFE,IAAAA,IAAA,UAAaA,IAAAA,SAAAA,UAFX,cAEnBC,EAFmB,yBAGlBA,EAASC,MAHS,2CAAH,qDAKXC,EAAS,mCAAG,WAAMC,GAAN,8EACvBJ,IAAAA,SAAAA,QAAA,4DAA8EF,EAA9E,kBAA2FM,EAA3F,0BADuB,SAEAJ,IAAAA,IAAA,UAAaA,IAAAA,SAAAA,UAFb,cAEjBC,EAFiB,yBAGhBA,EAASC,MAHO,2CAAH,sDAKTG,EAAe,mCAAG,WAAMC,GAAN,8EAC7BN,IAAAA,SAAAA,QAAA,6CAA+DM,EAA/D,oBAAmFR,EAAnF,mBAD6B,SAENE,IAAAA,IAAA,UAAaA,IAAAA,SAAAA,UAFP,cAEvBC,EAFuB,yBAGtBA,EAASC,MAHa,2CAAH,sDAKfpB,EAAY,mCAAG,WAAMwB,GAAN,8EAC1BN,IAAAA,SAAAA,QAAA,6CAA+DM,EAA/D,4BAA2FR,EAA3F,mBAD0B,SAEHE,IAAAA,IAAA,UAAaA,IAAAA,SAAAA,UAFV,cAEpBC,EAFoB,yBAGnBA,EAASC,MAHU,2CAAH,sDAKZK,EAAe,mCAAG,WAAMD,GAAN,8EAC7BN,IAAAA,SAAAA,QAAA,6CAA+DM,EAA/D,4BAA2FR,EAA3F,mBAD6B,SAENE,IAAAA,IAAA,UAAaA,IAAAA,SAAAA,UAFP,cAEvBC,EAFuB,yBAGtBA,EAASC,MAHa,2CAAH","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","services/publicationsApi.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ListCast = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  & > li {\n    width: 190px;\n    margin-bottom: 10px;\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCast } from '../../services/publicationsApi';\nimport { ListCast } from './Cast.styled';\n\nexport default function Cast() {\n  let { movieId } = useParams();\n  const [casts, setCasts] = useState([]);\n\n  useEffect(() => {\n    async function getCasts() {\n      try {\n        if (casts.length !== 0) {\n          return;\n        }\n        const { cast } = await getMovieCast(movieId);\n        if (cast.length === 0) {\n          alert('Sorry! Nothing found!');\n          return;\n        }\n        const acters = cast.map(({ id, profile_path, name, character }) => {\n          return { id, profile_path, name, character };\n        });\n\n        setCasts(acters);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    getCasts();\n  }, [movieId, casts]);\n  return (\n    <ListCast>\n      {casts &&\n        casts.map(cast => {\n          return (\n            <li key={cast.id}>\n              {(cast.profile_path && (\n                <img\n                  src={`https://image.tmdb.org/t/p/original${cast.profile_path}`}\n                  alt={`${cast.name}`}\n                  width=\"190\"\n                />\n              )) || (\n                <img\n                  src={`https://www.salonlfc.com/wp-content/uploads/2018/01/image-not-found-1-scaled-1150x647.png`}\n                  alt={`${cast.name}`}\n                  width=\"190\"\n                  height=\"285\"\n                />\n              )}\n\n              <p>Name: {cast.name}</p>\n              <p>Character: {cast.character}</p>\n            </li>\n          );\n        })}\n    </ListCast>\n  );\n}\n","import axios from 'axios';\nconst key = '051044c279aad319532da903b2292510';\n\nexport const getTrending = async () => {\n  axios.defaults.baseURL = `https://api.themoviedb.org/3/trending/movie/day?api_key=${key}`;\n  const response = await axios.get(`${axios.defaults.baseURL}`);\n  return response.data;\n};\nexport const getSearch = async query => {\n  axios.defaults.baseURL = `https://api.themoviedb.org/3/search/movie?api_key=${key}&query=${query}&page=1&language=en-US`;\n  const response = await axios.get(`${axios.defaults.baseURL}`);\n  return response.data;\n};\nexport const getMovieDetails = async movie_id => {\n  axios.defaults.baseURL = `https://api.themoviedb.org/3/movie/${movie_id}?api_key=${key}&language=en-US`;\n  const response = await axios.get(`${axios.defaults.baseURL}`);\n  return response.data;\n};\nexport const getMovieCast = async movie_id => {\n  axios.defaults.baseURL = `https://api.themoviedb.org/3/movie/${movie_id}/credits?api_key=${key}&language=en-US`;\n  const response = await axios.get(`${axios.defaults.baseURL}`);\n  return response.data;\n};\nexport const getMovieReviews = async movie_id => {\n  axios.defaults.baseURL = `https://api.themoviedb.org/3/movie/${movie_id}/reviews?api_key=${key}&language=en-US`;\n  const response = await axios.get(`${axios.defaults.baseURL}`);\n  return response.data;\n};\n"],"names":["ListCast","styled","Cast","movieId","useParams","useState","casts","setCasts","useEffect","length","getMovieCast","cast","alert","acters","map","id","profile_path","name","character","console","log","getCasts","src","alt","width","height","key","getTrending","axios","response","data","getSearch","query","getMovieDetails","movie_id","getMovieReviews"],"sourceRoot":""}